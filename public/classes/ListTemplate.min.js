import{Todo}from"./Todo.js";export class ListTemplate{constructor(t){if(this.container=t,this.todos=[],this.type="all",this.bind(),localStorage){const t=localStorage.getItem("todos");t&&(JSON.parse(t).forEach(t=>{const e=new Todo(t.id,t.title);this.todos.push(e)}),this.render())}}add(t){this.todos.push(t),this.render()}setType(t){this.type=t,this.render()}bind(){this.container.addEventListener("click",t=>{const e=t.target,o=e.closest("li");e.className.includes("edit-icon")&&this.toggleEdit(o.id),e.className.includes("delete-icon")&&this.deleteTodo(o.id),"P"===e.tagName&&this.toggleDone(o.id)}),this.container.addEventListener("change",t=>{const e=t.target,o=e.closest("li").id;this.editTodo(o,e.value)})}deleteTodo(t){this.todos=this.todos.filter(e=>e.getId()!==t),this.render()}editTodo(t,e){this.todos.forEach(o=>{o.getId()===t&&o.setTitle(e)}),this.toggleEdit(t),this.render()}toggleDone(t){this.todos.forEach(e=>{e.getId()===t&&e.toggleDone()}),this.render()}toggleEdit(t){this.todos.forEach(e=>{e.getId()===t&&e.toggleIsEditing()}),this.render()}render(t=this.todos){let e="";switch(this.type){case"done":t.forEach(t=>{t.getDone()&&(e+=t.render())});break;case"undone":t.forEach(t=>{t.getDone()||(e+=t.render())});break;default:t.forEach(t=>{e+=t.render()})}this.container.innerHTML=e,localStorage.setItem("todos",JSON.stringify(this.todos))}}